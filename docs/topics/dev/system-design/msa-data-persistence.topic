<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
  SYSTEM "https://resources.jetbrains.com/writerside/1.0/xhtml-entities.dtd">
<topic id="msa-data-persistence"
       title="Patterns for Data Persistence"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://resources.jetbrains.com/writerside/1.0/topic.v2.xsd">

  <chapter id="database_per_service" title="Database-per-service">
    <p>
      In the shared-database-per-service pattern, the same database is shared by several microservices. Make sure that you avoid hot
      tables (single tables that are shared among multiple microservices). This pattern does not reduce dependencies between development
      teams, and introduces runtime coupling because all microservices share the same database. For example, long-running "Sales"
      transactions can lock the "Customer" table and this blocks the "Customer" transactions. And, every service has a potential entry point
      to all parts of the database, increasing the risk of accidental or malicious data access beyond the service's domain.
    </p>
    <chapter id="shared_database_per_service" title="Shared-database-per-service">

    </chapter>
  </chapter>

  <chapter id="api_composition" title="API Composition">

  </chapter>

  <chapter id="cqrs" title="CQRS">
    <tldr>
      <p>Command Query Responsibility Segregation</p>
      <p>The event sourcing pattern is typically used with the CQRS to decouple read from write workloads</p>
    </tldr>
  </chapter>

  <chapter id="saga_pattern" title="Saga pattern">

  </chapter>

  <seealso>
    <category ref="external">
      <a href="https://docs.aws.amazon.com/prescriptive-guidance/latest/modernization-data-persistence/welcome.html">AWS- Patterns for
        enabling data persistence</a>
    </category>
  </seealso>
</topic>
