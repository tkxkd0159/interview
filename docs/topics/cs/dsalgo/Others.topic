<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
        SYSTEM "https://resources.jetbrains.com/writerside/1.0/xhtml-entities.dtd">
<topic xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="https://resources.jetbrains.com/writerside/1.0/topic.v2.xsd"
       title="Others" id="Others">

    <chapter title="Recursion" id="recursion">
        <p>
            Factorial.
        </p>
        <code-block lang="go">
            func factorial(n int) int {
                if n == 0 {
                    return 1
                }

                return n * factorial(n-1)
            }
        </code-block>


        <chapter title="Fibonacci" id="fibonacci">

        </chapter>
    </chapter>

    <chapter title="Hashing" id="hashing">

    </chapter>

    <chapter title="Bit Manipulation" id="bit_manipulation">

    </chapter>

    <chapter title="Sweep Line" id="sweep_line">

        <code-block lang="python">
            def maximum_overlapping_intervals(intervals):
                events = []

                for start, end in intervals:
                    events.append((start, 'start'))
                    events.append((end, 'end'))

                # Sort events: first by time, then by 'end' before 'start' if times are equal
                events.sort(key=lambda x: (x[0], x[1] == 'start'))

                current_overlap = 0
                max_overlap = 0

                for event in events:
                    if event[1] == 'start':
                        current_overlap += 1
                        max_overlap = max(max_overlap, current_overlap)
                    elif event[1] == 'end':
                        current_overlap -= 1

                return max_overlap

            # Example usage:
            intervals = [(1, 3), (2, 4), (3, 6), (5, 7), (6, 8)]
            result = maximum_overlapping_intervals(intervals)
            print("Maximum number of overlapping intervals:", result) # 3
        </code-block>
    </chapter>
</topic>